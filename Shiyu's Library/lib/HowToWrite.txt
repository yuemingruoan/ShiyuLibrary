《语句千万条，规范第一条，代码不规范，重构两行泪》
1.每个文件中必须包含using namespace std(那么多std::看着浑身不舒服)；
2.一个.cpp文件对应一个.h文件（main.cpp除外，那个是测试用的）所有.h文件最后都要include在ShiyuLibrary.h内，最终调用库调用的即是ShiyuLibrary.h；
3.所有位于public内的函数必须写上注释（private内的无需）（写在函数的声明处，而不是定义处），格式如下：
------------------------------
函数用处： XXXXXX;
创建者： XXX（即推送时作者那一栏中你的名字）;
作者邮箱： XXXXXX@XXX.com;
编写时间： XXXX.XX.XX(年.月.日);
是否完整：（是/否）;
当前存在BUG: (有就填BUG的描述，无就填"无");
参数一    数据类型 是否可空 注释;（可空的意思是有同名函数的参数中没有这个参数）
......（接下来的参数以此类推）;
返回值     数据类型  注释;
注意事项： XXXX;
(注：每行结束以;结尾)
------------------------------
4.禁止在代码块中给参数赋值（return:你当我不存在？）；
5.每写完一个函数就推送一次，不要嫌烦，早发别人能早看到，有BUG也能早点发现；
6.欢迎给别人的代码找茬（但是不要动别人的代码，让写的人自己修BUG，不然BUG容易越来越多）；
7.大括号独占一行，大括号内的语句块相对于大括号缩进四格，例：
------------------------------
if ()
{
    表达式；
}
else
{
    表达式；
}
------------------------------
8.嵌套的if else 结构中，else与其对应的if标齐，例：
------------------------------
if （）
{

}
else if()
       {
           表达式；
       }
       else
       {
           表达式；
       }
------------------------------
9.函数与包含参数的小括号之间应有一格缩进（自定义函数时也是）例：
------------------------------
if （）
while （）
for ()
------------------------------
10.少用指针和容器，因为时雨看不懂喵！
11.一定需要调用的库请添加到 资源文件 文件夹内；
12.禁止在自定义头文件内使用include命令；
13.函数的定义应写在与该类同名的.cpp文件中，函数的声明应写在与该类同名的.h文件中的与该类同名的类中；
14.即使是非公开函数，也要求在private内进行定义，可以更加明了
15..h文件开头需按照如下格式填写注释：
------------------------------
作者1： XXX;
作者2： XXX;
用途：XXX;
作者邮箱：XXXXX@XXX.com
(以此类推，只有一位作者的仅需写作者：XXX; 即可)
创建时间：XXX;
引用的支持库： 
    1.xxx
    2.xxx
(以此类推，无引用写无)
------------------------------
16.模板编写好的类请在ShiyuLibrary.h中进行include;
17.推送的时候写清楚都干了啥（咱们虽然都是猫，但是推送的时候还是用人话吧）
18.注释无需缩进，但需按照如下格式进行书写：
------------------------------
\*------------------------------
注释内容
------------------------------*\
------------------------------
19.尽量少引用外部库，若确实需要引用，请将其添加到资源文件中,并存于库目录下的lib文件夹内
20.关于注释时数据类型的名称，规定如下：
------------------------------
int/long long:整数型
float/double:浮点型
bool:逻辑型
char:字符型
char[]:字节集
string:字符串
wstring:编码字符串
------------------------------
21.注释及代码格式不明白者请参考Encoding类
22.禁止语句套语句，例：
------------------------------
写成这种格式：
string Encoding::ANSIToUTF8(string& str)
{
    wstring a;
    a = Encoding::ANSIToUnicode(str);
    return Encoding::UnicodeToUTF8(a);
}
而不是这种：
string Encoding::ANSIToUTF8(string& str)
{
    return Encoding::UnicodeToUTF8(Encoding::ANSIToUnicode(str));
}
------------------------------
23.WebApi中的函数注释需加上接口文档链接，例：
------------------------------
函数用处： XXXXXX;
接口文档地址：
创建者： XXX（即推送时作者那一栏中你的名字）;
作者邮箱： XXXXXX@XXX.com;
编写时间： XXXX.XX.XX(年.月.日);
是否完整：（是/否）;
当前存在BUG: (有就填BUG的描述，无就填"无");
参数一    数据类型 是否可空 注释;（可空的意思是有同名函数的参数中没有这个参数）
......（接下来的参数以此类推）;
返回值     数据类型  注释;
注意事项： XXXX;
(注：每行结束以;结尾)
------------------------------
24.能用重载的就不要用缺省参数（这样运行时速度会更快）
（暂时先这些，后面想到了会补；）